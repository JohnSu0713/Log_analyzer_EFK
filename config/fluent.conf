<system>
  workers 10
</system>
<source>
  @type http
  port 9880
  bind 0.0.0.0
  @label @SEL_LOG
</source>
<source>
  @type http
  port 8880
  bind 0.0.0.0
  @label @DMESG_LOG
</source>
#########################################################
#                   Log Processing                      #
#########################################################
<label @SEL_LOG>
  <filter sel.**>
  @type parser
  key_name raw_message
    <parse>
      @type regexp
      expression /^(?<SN>[^|]+) \| (?<PPN>[^|]+) \| (?<product_name>[^|]+) \| (?<log_index>[^|]+) \| (?<date>[^|]+) \| (?<issue_time>[^|]+) \| (?<sensor>[^|]+) \| (?<message>[^|]+) \| (?<status>.*)$/i
    </parse>
  </filter>
  # Match input sel.log into normal and error
  <match sel.**>
    @type rewrite_tag_filter
    <rule>
      key status
      pattern /^([^|]+) \| Reading (.*)/i
      tag ex.${tag}
      # invert true
    </rule>
    <rule>
      key status
      pattern /^([^|]+)/i
      tag ori.${tag}
    </rule>
  </match>
  # filter to parse sel logs (tag: error.**) with error message.
  <filter ex.**>
    @type parser
    key_name status
    reserve_data true
    <parse>
      @type regexp
      expression /^(?<status>[^|]+) \| (?<error>.*)$/
    </parse>
  </filter>

  # filter to add the tag field for the original log
  <filter **>
    @type record_transformer
    <record>
      tag ${tag}
    </record>
  </filter>
  # Send SEL.log to elasticsearch
  <match **>
    @type copy
    <store>
      @type elasticsearch
      host elasticsearch
      port 9200
      logstash_format true
      logstash_prefix fluentd
      logstash_dateformat %Y%m%d
      include_tag_key true
      type_name access_log
      tag_key @log_name
      flush_interval 1s
    </store>
    <store>
      @type stdout
    </store>
  </match>
</label>

<label @DMESG_LOG>
  <filter dmesg.**>
  @type parser
  key_name raw_message
    <parse>
      @type regexp
      expression /^(?<SN>[^|]+) \| (?<PPN>[^|]+) \| (?<product_name>[^|]+) \| \[(?<issue_time>[^.]+\.[^.]+)\](?<Device>[^:]+)\:(?<message>.*)/i
    </parse>
  </filter>
  # filter to add the tag field for the original log
  <filter dmesg.**>
    @type record_transformer
    <record>
      tag ${tag}
    </record>
  </filter>
  # Send dmesg to elasticsearch
  <match **>
    @type copy
    <store>
      @type elasticsearch
      host elasticsearch
      port 9200
      logstash_format true
      logstash_prefix fluentd
      logstash_dateformat %Y%m%d
      include_tag_key true
      type_name access_log
      tag_key @log_name
      flush_interval 1s
    </store>
    <store>
      @type stdout
    </store>
  </match>
</label>