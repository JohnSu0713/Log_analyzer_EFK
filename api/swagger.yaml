
swagger: "2.0"
info:
  version: "1.0.0"
  title: "Wiwynn Diagnosis"
basePath: "/"
schemes:
  - "http"
consumes:
  - "application/json"
produces:
  - "application/json"
paths:
# Agent which send log to the fluentd
  /agent:
    post:
      summary: Collecting logs
      tags:
        - Fluentd Sender
      consumes:
        - application/json
      produces:
        - application/json
      description: Agent to collect required types of logs to fluentd.
      parameters:
        - in: body
          name: status
          required: true
          schema:
            type: array
            example: ["sel, dmesg"]
            items:
              type: string
              example: "sel"
      responses:
        200:
          description: OK
        400:
          description: "Input Error"
# Query Error type by certain condition
  /query:
    get:
      tags:
        - "Query Service"
      summary: Query target
      consumes:
        - application/json
      produces:
        - application/json
      description: Query logs and return diagnosis result according to the condition.
      parameters:
        - in: query
          name: model
          type: string
        - in: query
          name: serial_num
          type: string
        - in: query
          name: part_num
          type: string
        - in: query
          name: created_on
          type: string
          format: date
      responses:
        200:
          description: OK
        400:
          description: "Invalid Query"
  # List and query current searching template
  /pattern: 
    get:
      tags:
        - "Searching Pattern"
      summary: Query searching template
      consumes:
        - application/json
      produces:
        - application/json
      description: Lookup certain error searching template.
      parameters:
        - in: query
          name: error_type
          type: string
        - in: query
          name: sensor_type
          type: string
        - in: query
          name: description message
          type: string
        - in: query
          name: pattern_id
          type: string
 
      responses:
        200:
          description: OK
        400:
          description: "Template Not Found."
    # Add new error pattern template to DB.
    post:
      tags:
        - "Searching Pattern"
      summary: Add new Error pattern
      consumes:
        - application/json
      produces:
        - application/json
      description: Add new error pattern template to DB.
      parameters:
        - in: body
          name: body
          required: true
          schema:
            example:
              {
                "script":
                  {
                    "lang": "mustache",
                    "source":
                      {
                        "query":
                          { "match": { "{{your_field}}": "{{your_value}}" } },
                      },
                  },
              }
      responses:
        200:
          description: OK
        400:
          description: "Template Not Found."

    delete:
      tags:
        - "Searching Pattern"
      summary: Delete certain error pattern
      consumes:
        - application/json
      produces:
        - application/json
      description: Lookup and delete certain error searching pattern.
      parameters:
        - in: query
          name: pattern_id
          type: string
 
      responses:
        200:
          description: OK
        400:
          description: "Template Not Found."
      
  

  # ================= progress ===================
  # /query/template:
  #   get:
  #     tags:
  #       - "Query Service"
  #     summary: "Get template in the searching engine."
  #     consumes:
  #       - application/json
  #     produces:
  #       - application/json
  #     parameters:
  #       - in: body
  #         name: query
  #         schema:
  #           properties:
  #             type:
  #               type: string
  #               example: "Fan"
  #     responses:
  #       200:
  #         description: OK
  #       400:
  #         description: "Search template Error"
  # /query/template/{error_type}:
  #   get:
  #     tags:
  #       - "Query Service"
  #     summary: "Get error type template from elasticsearch."
  #     parameters:
  #       - in: body
  #         name: body
  #         required: true
  #         schema:
  #           required:
  #             - error_type
  #           example:
              
  #     responses:
  #       200:
  #         description: OK
  #       400:
  #         description: "Post template Error"

  #   post:
  #     tags:
  #       - "Query Service"
  #     summary: "Post new error type template to elasticsearch."
  #     parameters:
  #       - in: body
  #         name: body
  #         required: true
  #         schema:
  #           example:
  #             {
  #               "script":
  #                 {
  #                   "lang": "mustache",
  #                   "source":
  #                     {
  #                       "query":
  #                         { "match": { "{{your_field}}": "{{your_value}}" } },
  #                     },
  #                 },
  #             }
  #     responses:
  #       200:
  #         description: OK
  #       400:
  #         description: "Post template Error"
